{"version":3,"sources":["Genre.jsx","App.jsx","index.js"],"names":["Genre","props","className","genre","map","elem","App","useState","mainData","setMainData","list","setList","loading","setLoading","left","setLeft","right","setRight","compare","a","b","an","name","bn","localeCompare","updateList","lefti","righti","arr","length","slice","useEffect","fetch","headers","Authorization","response","json","data","sort","fetchData","onClick","disabled","city","state","telephone","split","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAAe,SAASA,EAAMC,GAC1B,OACI,qBAAKC,UAAU,gBAAf,SACCD,EAAME,MAAMC,KAAI,SAAAC,GACd,OAAO,mBAAGH,UAAU,aAAb,SAA2BG,SCA9B,SAASC,IACtB,MAA8BC,mBAAS,IAAvC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAAsBF,mBAAS,IAA/B,mBAAKG,EAAL,KAAWC,EAAX,KACA,EAA4BJ,oBAAS,GAArC,mBAAKK,EAAL,KAAcC,EAAd,KACA,EAAsBN,mBAAS,GAA/B,mBAAKO,EAAL,KAAWC,EAAX,KACA,EAAwBR,mBAAS,GAAjC,mBAAKS,EAAL,KAAYC,EAAZ,KAEA,SAASC,EAAQC,EAAGC,GAClB,IAAIC,EAAKF,EAAEG,KACPC,EAAKH,EAAEE,KACX,OAAOD,EAAGG,cAAcD,GAE1B,SAASE,EAAWC,EAAOC,EAAQC,GACjCb,EAAQW,GACRT,EAASU,GACTd,GAAW,GACa,IAApBL,EAASqB,OACXlB,EAAQiB,EAAIE,MAAM,EAAG,KAErBnB,EAAQiB,EAAIE,MAAMJ,EAAOC,EAAS,IAEpCd,GAAW,GAkBb,OAfAkB,qBAAU,WAAM,4CACd,8BAAAZ,EAAA,sEACuBa,MAAM,+BAAgC,CACzDC,QAAS,CACPC,cAAe,iCAHrB,cACMC,EADN,gBAMmBA,EAASC,OAN5B,QAMMC,EANN,QAOOC,KAAKpB,GACVT,EAAY4B,GACZZ,EAAW,EAAG,EAAGY,GATnB,4CADc,uBAAC,WAAD,wBAYdE,KAEC,IAED,sBAAKrC,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,2CAGF,qBAAKA,UAAU,OAAf,UACIU,GACA,sBAAKV,UAAU,QAAf,UACE,qBAAKA,UAAU,SAAf,SACE,sDAEF,wBACEA,UAAU,WACVsC,QAAS,WACPf,EAAWX,EAAO,GAAIE,EAAQ,GAAIR,IAEpCiC,SAAmB,IAAT3B,EALZ,kBASA,wBACEZ,UAAU,WACVsC,QAAS,WACPxB,EAAQ,GAAKR,EAASqB,OAClBJ,EAAWX,EAAO,GAAIN,EAASqB,OAAQrB,GACvCiB,EAAWX,EAAO,GAAIE,EAAQ,GAAIR,IAExCiC,SAAUzB,GAASR,EAASqB,OAAS,EAPvC,kBAWA,kCACE,+BACE,oBAAI3B,UAAU,OAAd,kBACA,oBAAIA,UAAU,OAAd,kBACA,oBAAIA,UAAU,QAAd,mBACA,oBAAIA,UAAU,QAAd,0BACA,oBAAIA,UAAU,QAAd,sBAGDQ,EAAKN,KAAI,SAACC,GACT,OACE,+BACE,oBAAIH,UAAU,OAAd,SAAsBG,EAAKiB,OAC3B,oBAAIpB,UAAU,OAAd,SAAsBG,EAAKqC,OAC3B,oBAAIxC,UAAU,QAAd,SAAuBG,EAAKsC,QAC5B,oBAAIzC,UAAU,QAAd,SAAuBG,EAAKuC,YAC5B,oBAAI1C,UAAU,QAAd,SACG,cAACF,EAAD,CAAOG,MAAOE,EAAKF,MAAM0C,MAAM,0BCtFtDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC1C,EAAD,MAEF2C,SAASC,eAAe,W","file":"static/js/main.986596d8.chunk.js","sourcesContent":["export default function Genre(props){\r\n    return(\r\n        <div className=\"genres-holder\">\r\n       { props.genre.map(elem=>{\r\n           return <p className=\"genre-item\">{elem}</p>\r\n        })\r\n    }\r\n        </div>\r\n    )\r\n}","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport Genre from \"./Genre\";\r\n\r\nexport default function App() {\r\n  let [mainData, setMainData] = useState([]);\r\n  let [list, setList] = useState([]);\r\n  let [loading, setLoading] = useState(true);\r\n  let [left, setLeft] = useState(0);\r\n  let [right, setRight] = useState(9);\r\n\r\n  function compare(a, b) {\r\n    let an = a.name;\r\n    let bn = b.name;\r\n    return an.localeCompare(bn);\r\n  }\r\n  function updateList(lefti, righti, arr) {\r\n    setLeft(lefti);\r\n    setRight(righti);\r\n    setLoading(true);\r\n    if (mainData.length === 0) {\r\n      setList(arr.slice(0, 10));\r\n    } else {\r\n      setList(arr.slice(lefti, righti + 1));\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let response = await fetch(\"http://128.199.195.196:3001/\", {\r\n        headers: {\r\n          Authorization: \"Bearer iqi509189dxznal;,ggi\",\r\n        },\r\n      });\r\n      let data = await response.json();\r\n      data.sort(compare);\r\n      setMainData(data);\r\n      updateList(0, 9, data);\r\n    }\r\n    fetchData();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"navbar\">\r\n        <p>Explorer</p>\r\n      </div>\r\n\r\n      <div className=\"main\">\r\n        {!loading && (\r\n          <div className=\"table\">\r\n            <div className=\"header\">\r\n              <h1>List of Restraunts</h1>\r\n            </div>\r\n            <button\r\n              className=\"left btn\"\r\n              onClick={() => {\r\n                updateList(left - 10, right - 10, mainData);\r\n              }}\r\n              disabled={left === 0 ? true : false}\r\n            >\r\n              Prev\r\n            </button>\r\n            <button\r\n              className=\"next btn\"\r\n              onClick={() => {\r\n                right + 10 > mainData.length\r\n                  ? updateList(left + 10, mainData.length, mainData)\r\n                  : updateList(left + 10, right + 10, mainData);\r\n              }}\r\n              disabled={right >= mainData.length - 1 ? true : false}\r\n            >\r\n              Next\r\n            </button>\r\n            <table>\r\n              <tr>\r\n                <th className=\"name\">Name</th>\r\n                <th className=\"city\">City</th>\r\n                <th className=\"state\">State</th>\r\n                <th className=\"phone\">Phone Number</th>\r\n                <th className=\"genre\">Genre</th>\r\n              </tr>\r\n\r\n              {list.map((elem) => {\r\n                return (\r\n                  <tr>\r\n                    <td className=\"name\">{elem.name}</td>\r\n                    <td className=\"city\">{elem.city}</td>\r\n                    <td className=\"state\">{elem.state}</td>\r\n                    <td className=\"phone\">{elem.telephone}</td>\r\n                    <td className=\"genre\">\r\n                      {<Genre genre={elem.genre.split(\",\")} />}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\"\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}